/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports.dm = {};\nmodule.exports.r = [];\nmodule.exports.ri = 0;\nmodule.exports.fi = null;\nmodule.exports.search = true;\nmodule.exports.sdata = {\n  empty: true\n};\nmodule.exports.init = true;\nmodule.exports.mdownpos = []; // Cache jQuery lookups for buttons to add and remove pdfs\n\nmodule.exports.$addoc = $('#adddoc');\nmodule.exports.$loadsample = $('#loadsample');\nmodule.exports.$removedoc = $('#removedoc');\nmodule.exports.$initentry = $('#initentry');\nmodule.exports.$instr = $('#instr-button');\n\n//# sourceURL=webpack:///./src/data.js?");

/***/ }),

/***/ "./src/docfunctions.js":
/*!*****************************!*\
  !*** ./src/docfunctions.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rn = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n\nvar addDoc = function addDoc(fd, callback) {\n  rn.renderLoadingStart('Loading document');\n\n  if (!fd) {\n    return false;\n  }\n\n  if (!fd.get('file')) {\n    return false;\n  }\n\n  $.ajax({\n    url: '/doc/load',\n    type: 'POST',\n    data: fd,\n    success: function success(data) {\n      rn.renderLoadingEnd();\n\n      if (data.err || !data.iframeurl) {\n        rn.renderError(data.err);\n        return false;\n      } else {\n        rn.renderDoc(data.iframeurl);\n      }\n    },\n    cache: false,\n    contentType: false,\n    processData: false\n  });\n  return true;\n};\n\nvar removeDoc = function removeDoc(callback) {\n  rn.renderLoadingStart('Removing Document');\n  $.getJSON('/doc/remove', function (data) {\n    rn.renderLoadingEnd();\n    /*if( data.err ) {\n    \trn.renderError(data.err);\n    \treturn;\n    }*/\n\n    if (callback) {\n      callback();\n    } else {\n      rn.renderDoc();\n    }\n  });\n};\n\nmodule.exports.addDoc = addDoc;\nmodule.exports.removeDoc = removeDoc;\n\n//# sourceURL=webpack:///./src/docfunctions.js?");

/***/ }),

/***/ "./src/eventfunctions.js":
/*!*******************************!*\
  !*** ./src/eventfunctions.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar df = __webpack_require__(/*! ./docfunctions.js */ \"./src/docfunctions.js\");\n\nvar rf = __webpack_require__(/*! ./recarrayfunctions.js */ \"./src/recarrayfunctions.js\");\n\nvar rn = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n/** \n * Bind functions to document buttons (cached above) and keypresses. The buttons that add documents\n * are file type input elements, and the 'change' event means a file has been added.\n * The button to remove a document is just a button, so the function is bound to a click event.\n */\n\n\nvar bindEvents = function bindEvents() {\n  d.$initentry.off().click(function () {\n    if (!rf.allUnchanged()) {\n      rn.renderAlert('Initiating data entry will end your current session, erasing any unsaved data. Are you sure you wish to continue?', function () {\n        rf.initR();\n        rn.renderSfView();\n        rn.renderFldEntry();\n      });\n    } else {\n      rf.initR();\n      rn.renderSfView();\n      rn.renderFldEntry();\n    }\n  });\n  d.$addoc.off().change(function () {\n    var fd = new FormData();\n    fd.append('file', d.$addoc[0].files[0]);\n    d.$addoc.val(null);\n    return df.addDoc(fd);\n  });\n  d.$loadsample.off().click(function () {\n    rn.renderDoc('/pdfviewer/web/viewer.html?file=/doc/SampleRoster.pdf');\n\n    if (r = []) {\n      rf.initR();\n      rn.renderSfView();\n      rn.renderFldEntry();\n    }\n  });\n  d.$removedoc.off().click(function () {\n    /** \n     * If any records have been edited, warn before proceeding (callback is executed by alert \n     * function upon confirmation)\n     */\n    if (!rf.allUnchanged()) {\n      rn.renderAlert('Removing document now will erase all unsaved changes.', function () {\n        df.removeDoc(function () {\n          rf.initR();\n          rn.renderAll();\n        });\n      });\n    } else {\n      df.removeDoc(function () {\n        rf.initR();\n        rn.renderAll();\n      });\n    }\n  });\n  d.$instr.off().click(function () {\n    rn.renderInstructions();\n  }); // Handle keydown events to cycle through fields and records\n\n  $(document).off('keydown').keydown(function (e) {\n    var $fldinput = $('.fldinput'); // If the focus is on any text input or textarea, disregard any other keystrokes, but \n    // make the \"enter\" key enter the data\n\n    if ($('select').is(':focus') || $('input').is(':focus') || $('textarea').is(':focus')) {\n      // Enter triggers 'change' event on fldinput element. See renderFldEntry() for handler\n      if (e.which === 13) {\n        if ($fldinput) $fldinput.change();\n      }\n\n      return;\n    }\n\n    if (e.which === 39) {\n      // 39: right\n      if (!rf.nextf()) {\n        return;\n      }\n    } else if (e.which === 37) {\n      // 37: left\n      if (!rf.prevf()) {\n        return;\n      }\n    } else if (e.which === 40) {\n      // 40: down\n      if (!rf.nextr()) {\n        return;\n      }\n    } else if (e.which === 38) {\n      // 38: up\n      if (!rf.prevr()) {\n        return;\n      }\n    } else if (e.which === 32) {// 32: space\n      // see below (skip the return)\n    } else {\n      return;\n    }\n\n    rn.renderFldEntry();\n    rn.renderSfView(); // Space focuses on fldinput, but only *after* fldinput is rendered\n\n    if (e.which === 32) {\n      e.preventDefault();\n\n      var _$fldinput = $('.fldinput');\n\n      if (_$fldinput) _$fldinput.focus();\n    }\n  });\n};\n\nvar unbindEvents = function unbindEvents() {\n  d.$initentry.off();\n  d.$addoc.off();\n  d.$loadsample.off();\n  d.$removedoc.off();\n  d.$instr.off();\n  $(document).off('keydown');\n};\n\nmodule.exports.bindEvents = bindEvents;\nmodule.exports.unbindEvents = unbindEvents;\n\n//# sourceURL=webpack:///./src/eventfunctions.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar rn = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n\nvar ef = __webpack_require__(/*! ./eventfunctions.js */ \"./src/eventfunctions.js\"); // Cache jQuery lookups for buttons to add and remove pdfs\n\n\nd.$addoc = $('#adddoc');\nd.$loadsample = $('#loadsample');\nd.$removedoc = $('#removedoc');\nd.$initentry = $('#initentry');\nd.$instr = $('#instr-button');\n/**\n * This ajax call gets everything started: it pulls the document map (a json config file) from\n * the server, sets it up as a global variable, and calls getDocs() to grab the list of pdfs\n * stored on the server. \n */\n\n$.getJSON(\"/api/dm\", function (data) {\n  if (!data.b || !data.r) {\n    rn.renderError('Can\\'t access server!');\n    return;\n  }\n\n  d.dm = data;\n  ef.bindEvents();\n  $('.instructions-frame').click(rn.renderInstructionsHide);\n  $('.close-button').click(rn.renderInstructionsHide);\n  $('.instructions').off().click(function (e) {\n    e.stopPropagation();\n  });\n  $('.modal').on('hidden.bs.modal', function () {\n    ef.bindEvents();\n  });\n  $('.modal').on('shown.bs.modal', function () {\n    // Make sure focus is not on fldentry, where damage can be done...\n    $('.fldwin').attr(\"tabindex\", -1).focus();\n    ef.unbindEvents();\n  }); // setting the parameter to 'true' ensures that r will be initalized after the docs are pulled\n});\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/mapfunctions.js":
/*!*****************************!*\
  !*** ./src/mapfunctions.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar getFieldsForLayout = function getFieldsForLayout(rin) {\n  var fout = {};\n  var map = getBorR(rin);\n\n  for (var i in d.r[rin].f) {\n    if (map.fields[i].type === 'index' && d.r[rin].f[i].showval) {\n      fout[i] = d.r[rin].f[i].showval;\n    } else {\n      fout[i] = d.r[rin].f[i].value;\n    }\n  }\n\n  return fout;\n};\n\nvar convRecSA = function convRecSA(type, index, records) {\n  var conv = function conv(record) {\n    var fm = type === 'record' ? d.dm.r[index].fields : d.dm.b[index].fields;\n    var recout = {};\n\n    for (var j in record) {\n      for (var k in fm) {\n        if (fm[k].sfname === j) {\n          recout[k] = record[j];\n        }\n      }\n    }\n\n    return recout;\n  };\n\n  var recsout = [];\n\n  if (Array.isArray(records)) {\n    for (var i = 0; i < records.length; i++) {\n      recsout.push(conv(records[i]));\n    }\n  }\n\n  return recsout;\n};\n\nvar getBorR = function getBorR(rin) {\n  if (rin === undefined) rin = d.ri;\n\n  if (d.r[rin].type == 'record') {\n    return d.dm.r[d.r[rin].ri];\n  } else if (d.r[rin].type == 'base') {\n    return d.dm.b[d.r[rin].bi];\n  } else if (d.r[rin].type == 'search') {\n    return d.dm.b[d.r[rin].bi];\n  } else {\n    return false;\n  }\n};\n\nvar getFm = function getFm(rin, fin) {\n  if (fin == undefined) {\n    rin = d.ri;\n    fin = d.fi;\n  }\n\n  if (d.r[rin].type == 'record') {\n    return d.dm.r[d.r[rin].ri].fields[fin];\n  } else if (d.r[rin].type == 'base') {\n    return d.dm.b[d.r[rin].bi].fields[fin];\n  } else if (d.r[rin].type == 'search') {\n    return d.dm.b[d.r[rin].bi].fields[fin];\n  } else {\n    return false;\n  }\n};\n\nvar parseLayout = function parseLayout(layStr, fieldsArray) {\n  var parseLayoutIf = function parseLayoutIf(condition, trueresult, falseresult) {\n    var conditionArray = $.trim(condition).split('=');\n\n    if (!fieldsArray[conditionArray[0]]) {\n      return parseLayout(falseresult, fieldsArray);\n    }\n\n    if (conditionArray.length == 1) {\n      if (fieldsArray[conditionArray[0]]) {\n        return parseLayout(trueresult, fieldsArray);\n      } else {\n        return parseLayout(falseresult, fieldsArray);\n      }\n    } else if (conditionArray.length > 1) {\n      if (fieldsArray[conditionArray[0]] == conditionArray[1]) {\n        return parseLayout(trueresult, fieldsArray);\n      } else {\n        return parseLayout(falseresult, fieldsArray);\n      }\n    } else {\n      return \"#BAD CONDITION (else)#\";\n    }\n  };\n\n  var outStr = '';\n  var i;\n  var j;\n  var k;\n  var l;\n  var condition;\n  var hashctr;\n  var trueresult;\n  var falseresult;\n\n  for (i = 0; i < layStr.length; i++) {\n    if (layStr[i] === \"#\") {\n      i += 1;\n\n      if (layStr.slice(i, i + 2) === \"IF\") {\n        i += 2;\n\n        if (layStr[i] != \"(\") {\n          outStr += \"#BAD CONDITIONAL! (no opening parentheses)#\";\n          i -= 1;\n          continue;\n        } else {\n          j = i + 1;\n\n          while (j < layStr.length && layStr[j] != \")\") {\n            j += 1;\n          }\n\n          if (j === layStr.length) {\n            outStr += \"#BAD CONDITIONAL! (no closing parentheses)#\";\n            i -= 1;\n            continue;\n          }\n\n          condition = layStr.slice(i + 1, j);\n          i = j + 1;\n\n          if (layStr[i] != \"{\") {\n            outStr += \"#BAD CONDITIONAL! (no opening brackets for true)#\";\n            i -= 1;\n          } else {\n            i += 1;\n            k = i;\n            hashctr = 0;\n\n            while (k < layStr.length && (layStr[k] != \"}\" || hashctr > 0)) {\n              if (layStr[k] == \"#\") {\n                hashctr += 1;\n              }\n\n              if (layStr[k] == \"}\" && layStr[k + 1] != \"{\") {\n                hashctr -= 1;\n              }\n\n              k += 1;\n            }\n\n            if (k === layStr.length) {\n              outStr += \"#BAD CONDITIONAL! (no closing brackets for true)#\";\n              i -= 1;\n              continue;\n            }\n\n            trueresult = layStr.slice(i, k);\n            i = k + 1;\n\n            if (layStr[i] === \"{\") {\n              i += 1;\n              l = i;\n              hashctr = 0;\n\n              while (l < layStr.length && (layStr[l] != \"}\" || hashctr > 0)) {\n                if (layStr[l] == \"#\") {\n                  hashctr += 1;\n                }\n\n                if (layStr[l] == \"}\" && layStr[l + 1] != \"{\") {\n                  hashctr -= 1;\n                }\n\n                l += 1;\n              }\n\n              falseresult = layStr.slice(i, l);\n              i = l + 1;\n            } else {\n              falseresult = '';\n            }\n\n            i -= 1;\n            outStr += parseLayoutIf(condition, trueresult, falseresult);\n          }\n        }\n      } else if (layStr[i] === \"{\") {\n        i += 1;\n        j = i;\n\n        while (j < layStr.length && layStr[j] != \"}\") {\n          j += 1;\n        }\n\n        if (j === layStr.length) {\n          outStr += \"#BAD FIELD#\";\n          i -= 1;\n          continue;\n        }\n\n        if (fieldsArray[layStr.slice(i, j)]) {\n          outStr += fieldsArray[layStr.slice(i, j)];\n        } else {\n          outStr += \"#BAD FIELD#\";\n        }\n\n        i = j;\n      } else {\n        outStr += \"#\";\n      }\n    } else {\n      outStr += layStr[i];\n    }\n  }\n\n  return outStr;\n};\n\nmodule.exports.convRecSA = convRecSA;\nmodule.exports.getFieldsForLayout = getFieldsForLayout;\nmodule.exports.getBorR = getBorR;\nmodule.exports.getFm = getFm;\nmodule.exports.parseLayout = parseLayout;\n\n//# sourceURL=webpack:///./src/mapfunctions.js?");

/***/ }),

/***/ "./src/recarrayfunctions.js":
/*!**********************************!*\
  !*** ./src/recarrayfunctions.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar mf = __webpack_require__(/*! ./mapfunctions.js */ \"./src/mapfunctions.js\");\n\nvar sf = __webpack_require__(/*! ./searchfunctions.js */ \"./src/searchfunctions.js\");\n\nvar rn = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n/** \n/* Resets the global record array and its index tracker, initializing it with base records set to\n * 'search.'\n */\n\n\nvar initR = function initR() {\n  d.r = [];\n  d.ri = 0;\n  addSearchRecords();\n  d.search = true;\n  d.sdata = {\n    empty: true\n  };\n  d.fi = d.r[d.ri].order[0];\n  rn.renderSfView();\n  rn.renderFldEntry();\n};\n/**\n * This monster of a function orders all of the records in r. It looks up the order fields in the\n * data map. \n */\n\n\nvar orderR = function orderR() {\n  /** \n   * Function to move an element from one place in an array (from) to another (to). It does not\n   * delete the element at to, but shifts it up on place.\n   */\n  var rMove = function rMove(from, to) {\n    if (!from || !to || from === to) {\n      return;\n    }\n\n    d.r.splice(to, 0, d.r.splice(from, 1)[0]);\n  }; // Main iterator loop: goes through each of the record types\n\n\n  for (var _i = 0; _i < d.dm.r.length; _i++) {\n    // j will tell us which element in r is where the records of type r[i] begin\n    var j = 0; // fmlist will be an array of fieldmaps (taken from dm) for the fields of each level of ordering\n\n    var fmlist = [];\n    var map = d.dm.r[_i]; // order is an array of objects that have all necessary information about each level of ordering\n\n    var order = map.settings.listorder; // Fill fmlist from the fieldmaps stored in map\n\n    for (var z = 0; z < order.length; z++) {\n      fmlist.push(map.fields[order[z].field]);\n    } // Advance j until we get to record type r[i]\n\n\n    for (j = d.dm.b.length; j < d.r.length && d.r[j].ri < _i; j++) {\n      ;\n    } // If we get to the last field, there is no ordering to do; we're finished\n\n\n    if (j == d.r.length - 1) break;\n    /** \n     * For each record type, this next loop iterates through every level of ordering, starting with\n     * the last and ending with the first, ordering all records.\n     */\n\n    for (var m = order.length - 1; m >= 0; m--) {\n      var type = fmlist[m].type; // Climb up the record array dealing with each record until we hit the next record type\n\n      for (var k = j; k < d.r.length && d.r[k].ri === _i; k++) {\n        // Get the value of the ordering field of the current record in our climb, depending on\n        // whether it is an index field, a regular field.\n        if (type === 'index') {\n          if (d.r[k].f[order[m].field].showval) {\n            var value1 = d.r[k].f[order[m].field].showval;\n          } else {\n            var value1 = '';\n          }\n        } else {\n          var value1 = d.r[k].f[order[m].field].value;\n        } // Now search back down the record array for the right place to move the current record\n\n\n        for (var l = k - 1; l >= j; l--) {\n          // Get the value of ordering field for the record we are comparing the higher record\n          // to, just like we did above\n          if (type === 'index') {\n            // This time, we make a note of what the type of index field is, storing it in \n            // 'typetmp'\n            var typetmp = fmlist[m].indexfields[fmlist[m].indexshow].type;\n\n            if (d.r[l].f[order[m].field].showval) {\n              var value2 = d.r[l].f[order[m].field].showval;\n            } else {\n              var value2 = '';\n            }\n          } else {\n            var typetmp = type;\n            var value2 = d.r[l].f[order[m].field].value;\n          } // For any empty values, we have to consult the 'empty' field in the ordering settings of\n          // our data map.\n\n\n          if (value1 === null || value1 === undefined || value1 === '') {\n            // If the bottom value is also empty: easy, just move right above it\n            if (value2 === null || value2 === undefined || value2 === '') {\n              rMove(k, l + 1);\n              break; // If the bottom value is not empty, decide whether or not to go past current field\n            } else if (order[m].empty) {\n              // If set to 'last', no need to move -- other fields will be moved past this one.\n              if (order[m].empty == 'last') {\n                break; // If set to 'first', send it past\n              } else if (order[m].empty == 'first') {\n                // If this element is the last one, just move into its place\n                if (l == j) {\n                  rMove(k, l);\n                  break; // Other wise move on to the next to compare\n                } else {\n                  continue;\n                } // If 'empty' setting is set to something else, just default to 'last'\n\n              } else {\n                break;\n              } // If the 'empty' setting is missing, default to 'last'\n\n            } else {\n              break;\n            }\n          } // What about if value1 is not empty but value2 is?\n\n\n          if (value2 == null || value2 == undefined || value2 == '') {\n            if (order[m].empty) {\n              // If empty fields go last, bring the non-empty record past the empty one\n              if (order[m].empty == 'last') {\n                continue; // If empty fields go first, this is where we end: move the non-empty record just\n                // above the empty one\n              } else if (order[m].empty == 'first') {\n                rMove(k, l + 1);\n                break; // If the 'empty' setting is set to something unrecognized, default to 'last'\n              } else {\n                rMove(k, l + 1);\n                break;\n              } // If 'empty' setting is missing, default to 'last'\n\n            } else {\n              continue;\n            }\n          } // For date fields, we need to convert to a number to compare properly. We only need\n          // to make this alteration after dealing with empties (which don't require knowing \n          // actual values, but just whether a field is empty or not)\n\n\n          if (typetmp === 'date') {\n            value1 = new Date(value1).getTime();\n            value2 = new Date(value2).getTime();\n          } // Now we compare and decide whether to move. If equal, move just above to preserve order\n          // (which would be set by lower-level ordering from last iteration of variable m)\n\n\n          if (value1 === value2) {\n            rMove(k, l + 1);\n            break;\n          } else if (value1 > value2) {\n            if (order[m].order === 'asc') {\n              rMove(k, l + 1);\n              break;\n            } else {\n              if (l === j) {\n                rMove(k, l);\n                break;\n              } else {\n                continue;\n              }\n            }\n          } else if (value1 < value2) {\n            if (order[m].order === 'desc') {\n              rMove(k, l + 1);\n              break;\n            } else {\n              if (l == j) {\n                rMove(k, l);\n                break;\n              } else {\n                continue;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}; // Check whether a record in r at index rin (i.e., r[rin]) is new or not\n\n\nvar isNew = function isNew(rin) {\n  if (d.r[rin][\"new\"]) {\n    return true;\n  } else {\n    return false;\n  }\n}; // Check whether a record in r at index rin has been changed from the original value pulled\n// from salesforce\n\n\nvar isChanged = function isChanged(rin) {\n  var map = mf.getBorR(rin);\n\n  if (d.r[rin][\"new\"] || !d.r[rin].f.Id) {\n    for (var _i2 in d.r[rin].f) {\n      if (d.r[rin].f[_i2].changed) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  for (var _i3 in d.r[rin].f) {\n    if (d.r[rin].f[_i3].changed) {\n      if (d.r[rin].f[_i3].value != d.r[rin].f[_i3].origval) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}; // Check whether none of the records have been changed from their original values\n\n\nvar allUnchanged = function allUnchanged() {\n  for (var _i4 in d.r) {\n    if (isChanged(_i4)) return false;\n  }\n\n  return true;\n};\n\nvar basesUpToDate = function basesUpToDate() {\n  for (var _i5 in d.dm.b) {\n    if (isChanged(_i5)) return false;\n  }\n\n  return true;\n};\n\nvar setValue = function setValue(rin, fin, value) {\n  var fm = mf.getFm(rin, fin);\n  var valout;\n\n  switch (fm.type) {\n    case \"text\":\n    case \"picklist\":\n    case \"index\":\n    case undefined:\n      {\n        valout = value;\n        break;\n      }\n      ;\n\n    case \"date\":\n      {\n        if (value == '' || value == ' ') {\n          valout = null;\n          break;\n        }\n\n        var darr = value.split(\" \");\n        var dt;\n\n        if (darr.length == 1) {\n          if (value < 9999 && value > 1000) {\n            dt = new Date(\"Jan. 1, \" + value);\n          } else {\n            dt = new Date(value);\n          }\n        } else if (darr.length == 2) {\n          if (darr[0].toUpperCase() == \"SPRING\") {\n            dt = new Date(\"May 30, \" + darr[1]);\n          } else if (darr[0].toUpperCase() == \"SUMMER\") {\n            dt = new Date(\"July 15, \" + darr[1]);\n          } else if (darr[0].toUpperCase() == \"FALL\") {\n            dt = new Date(\"September 1, \" + darr[1]);\n          } else if (darr[0].toUpperCase() == \"WINTER\") {\n            dt = new Date(\"December 15, \" + darr[1]);\n          }\n        } else {\n          dt = new Date(value);\n        }\n\n        if (!dt || isNaN(dt.getTime())) {\n          rn.renderError(\"Not a valid date!\");\n          return false;\n        } else {\n          valout = dt.toISOString();\n        }\n\n        break;\n      }\n      ;\n\n    case \"email\":\n      {\n        var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n        if (re.test(value)) {\n          valout = value;\n        } else {\n          rn.renderError(\"Not a valid email address!\");\n          return false;\n        }\n\n        break;\n      }\n      ;\n\n    default:\n      valout = value;\n      break;\n  }\n\n  d.r[rin].f[fin].value = valout;\n  d.r[rin].f[fin].changed = true;\n  setOrder(rin);\n  return true;\n};\n\nvar validateSelection = function validateSelection(str) {\n  str = str.trim();\n  var $fldinput = $('.fldinput');\n  var type = mf.getFm().type;\n  var outval = true; // If fldinput is an <input> tag\n\n  if ($fldinput.prop('nodeName') === 'INPUT') {\n    // If fldinput is of type \"text\"\n    if ($fldinput.attr('type') === 'text') {\n      // Reject if there are any line breaks\n      if (str.indexOf('\\n') > -1) outval = false; // Reject if it is longer than the 'size' attribute of the input\n\n      if (str.length > $fldinput.attr('size')) outval = false;\n    } // If fldinput is a <select> tag\n\n  } else if ($fldinput.prop('nodeName') === 'SELECT') {\n    outval = false;\n    $('.fldinput option').each(function () {\n      if (this.value == str) {\n        outval = true;\n      }\n    });\n  }\n\n  if (type === 'phone') {\n    if (str.length > 20) outval = false;\n    if (/[\\&\\@\\$\\%\\^\\{\\}]/.test(str)) outval = false;\n    if (!/\\d/.test(str)) outval = false;\n  } else if (type === 'date') {\n    if (str.length > 19) outval = false;\n  } else if (type === 'email') {\n    var re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    if (!re.test(str)) outval = false;\n  } else if (type === 'url') {\n    var _re = /[\\s\\\"]+/;\n    var re2 = /\\.+/;\n    if (_re.test(str)) outval = false;\n    if (!re2.test(str)) outval = false;\n  }\n\n  return outval;\n}; // Cycle to the next ri up the record array (r), but add a new record of type dm.r[rin]\n\n\nvar nextrAndAdd = function nextrAndAdd(rin) {\n  if (rin < 0 || rin >= d.dm.r.length && d.r[d.ri].type == 'record') return false;\n  addRecord(rin);\n\n  if (isNew(d.ri) && !isChanged(d.ri)) {\n    d.r.splice(d.ri, 1);\n  } else {\n    d.ri += 1;\n  }\n\n  d.fi = d.r[d.ri].order[0];\n  return true;\n}; // Cycle to the next record without adding a new record\n\n\nvar nextrNoAdd = function nextrNoAdd() {\n  if (isNew(d.ri) && !isChanged(d.ri)) {\n    d.r.splice(d.ri, 1);\n  } else {\n    d.ri += 1;\n  }\n\n  d.fi = d.r[d.ri].order[0];\n  return true;\n}; // Cycle to the next record (called when one presses the 'down' key -- see init.js)\n\n\nvar nextr = function nextr() {\n  if (d.ri === d.r.length - 1) {\n    if (d.ri >= d.dm.b.length) {\n      if (!isNew(d.ri) || isNew(d.ri) && isChanged(d.ri)) {\n        return nextrAndAdd(d.r[d.ri].ri);\n      } else if (d.r[d.ri].ri < d.dm.r.length - 1) {\n        return nextrAndAdd(d.r[d.ri].ri + 1);\n      } else {\n        return false;\n      }\n    } else if (d.ri < d.dm.b.length - 1) {\n      return false;\n    } else if (d.ri === d.dm.b.length - 1) {\n      if (isNew(d.ri)) {\n        return false;\n      } else {\n        return nextrAndAdd(0);\n      }\n    }\n  } else if (d.ri < d.r.length - 1) {\n    if (d.r[d.ri + 1].ri === d.r[d.ri].ri || d.r[d.ri].type === 'base') {\n      return nextrNoAdd();\n    } else if (!isNew(d.ri) || isNew(d.ri) && isChanged(d.ri)) {\n      return nextrAndAdd(d.r[d.ri].ri);\n    } else if (d.r[d.ri + 1].ri === d.r[d.ri].ri + 1) {\n      return nextrNoAdd();\n    } else {\n      return nextrAndAdd(d.r[d.ri].ri + 1);\n    }\n  }\n\n  return false;\n}; // \n\n\nvar prevrAndAdd = function prevrAndAdd(rin) {\n  if (rin < 0 || rin >= d.dm.r.length) return false;\n  addRecord(rin);\n\n  if (isNew(d.ri + 1) && !isChanged(d.ri + 1)) {\n    d.r.splice(d.ri + 1, 1);\n  }\n\n  d.fi = d.r[d.ri].order[0];\n  return true;\n}; //\n\n\nvar prevrNoAdd = function prevrNoAdd() {\n  if (isNew(d.ri) && !isChanged(d.ri) && d.r[d.ri].type === 'record') {\n    d.r.splice(d.ri, 1);\n  }\n\n  d.ri -= 1;\n  d.fi = d.r[d.ri].order[0];\n  return true;\n}; // \n\n\nvar prevr = function prevr() {\n  if (d.ri === 0) {\n    return false;\n  } else if (d.ri < d.dm.b.length) {\n    prevrNoAdd();\n  } else {\n    if (d.r[d.ri].ri === 0 || d.r[d.ri - 1].ri === d.r[d.ri].ri || isNew(d.ri - 1) && !isChanged(d.ri - 1)) {\n      prevrNoAdd();\n    } else {\n      prevrAndAdd(d.r[d.ri].ri - 1);\n    }\n  }\n\n  return true;\n}; // \n\n\nvar nextf = function nextf() {\n  if (d.fi === d.r[d.ri].order[d.r[d.ri].order.length - 1]) {\n    return nextr();\n  } else {\n    for (var i = 0; i < d.r[d.ri].order.length; i++) {\n      if (d.fi === d.r[d.ri].order[i]) {\n        d.fi = d.r[d.ri].order[i + 1];\n        break;\n      }\n    }\n  }\n\n  return true;\n};\n\nvar prevf = function prevf() {\n  if (d.fi === d.r[d.ri].order[0]) {\n    if (!prevr()) {\n      return false;\n    } else {\n      d.fi = d.r[d.ri].order[d.r[d.ri].order.length - 1];\n      return true;\n    }\n  } else {\n    for (var i = 0; i < d.r[d.ri].order.length; i++) {\n      if (d.fi === d.r[d.ri].order[i]) {\n        d.fi = d.r[d.ri].order[i - 1];\n        break;\n      }\n    }\n  }\n\n  return true;\n};\n\nvar jumpTo = function jumpTo(rin) {\n  if (!d.r[rin]) return false;\n  d.ri = rin;\n  d.fi = d.r[rin].order[0];\n  return true;\n};\n\nvar setOrder = function setOrder(rInd) {\n  if (rInd == undefined) rInd = d.ri;\n\n  var makeOrderArray = function makeOrderArray(om, f) {\n    var out = [];\n\n    for (var _i6 = 0; _i6 < om.length; _i6++) {\n      out.push(om[_i6].field);\n\n      if (om[_i6].autofill && !f[om[_i6].field].origval) {\n        if (om[_i6].autofill.condition === \"filled\") {\n          if (f[om[_i6].autofill.conditionfield].value && om[_i6].autofill[\"true\"]) {\n            f[om[_i6].field].value = om[_i6].autofill[\"true\"];\n          } else if (!f[om[_i6].autofill.conditionfield].value && om[_i6].autofill[\"false\"]) {\n            f[om[_i6].field].value = om[_i6].autofill[\"false\"];\n          }\n        }\n      }\n\n      if (om[_i6].condition) {\n        if (om[_i6].condition === \"filled\") {\n          if (f[om[_i6].field].value && om[_i6][\"true\"]) {\n            out = out.concat(makeOrderArray(om[_i6][\"true\"], f));\n          } else if (!f[om[_i6].field].value && om[_i6][\"false\"]) {\n            out = out.concat(makeOrderArray(om[_i6][\"false\"], f));\n          }\n        } else if (om[_i6].condition === \"switch\") {\n          for (var j = 0; j < om[_i6][\"switch\"].length; j++) {\n            for (var k = 0; k < om[_i6][\"switch\"][j].value.length; k++) {\n              if (f[om[_i6].field].value == om[_i6][\"switch\"][j].value[k]) {\n                out = out.concat(makeOrderArray(om[_i6][\"switch\"][j].order, f));\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return out;\n  };\n\n  var rec = d.r[rInd];\n  var recm;\n  var order;\n\n  if (rec.type === \"base\") {\n    recm = d.dm.b[rec.bi];\n    orderm = recm.settings.order;\n  } else if (rec.type === \"search\") {\n    recm = d.dm.b[rec.bi];\n    orderm = recm.settings.searchorder;\n  } else if (rec.type === \"record\") {\n    recm = d.dm.r[rec.ri];\n    orderm = recm.settings.order;\n  }\n\n  rec.order = makeOrderArray(orderm, d.r[rInd].f);\n};\n\nvar pushNewRec = function pushNewRec(rInd) {\n  for (var _i7 = 0; _i7 < d.r.length; _i7++) {\n    if (d.r[_i7].ri) {\n      if (d.r[_i7].ri > _i7) {\n        d.r.splice(_i7, 0, {\n          type: \"record\",\n          ri: rInd,\n          \"new\": true,\n          order: [],\n          f: {}\n        });\n\n        for (var j in d.dm.r[_i7].fields) {\n          d.r[_i7].f[j] = {\n            sfname: d.dm.r[_i7].fields[j].sfname,\n            value: null\n          };\n        }\n\n        setOrder(_i7);\n        return _i7;\n      }\n    }\n  }\n\n  d.r.push({\n    type: \"record\",\n    ri: rInd,\n    \"new\": true,\n    order: [],\n    f: {}\n  });\n\n  for (var _j in d.dm.r[rInd].fields) {\n    d.r[d.r.length - 1].f[_j] = {\n      sfname: d.dm.r[d.r.length - 1].fields[_j].sfname,\n      value: null\n    };\n  }\n\n  setOrder(d.r.length - 1);\n  return d.r.length - 1;\n};\n\nvar addSearchRecords = function addSearchRecords() {\n  for (var _i8 = 0; _i8 < d.dm.b.length; _i8++) {\n    d.r.push({\n      type: \"search\",\n      bi: _i8,\n      \"new\": true,\n      order: [],\n      f: {}\n    });\n\n    for (var j in d.dm.b[_i8].fields) {\n      d.r[_i8].f[j] = {\n        sfname: d.dm.b[_i8].fields[j].sfname\n      };\n\n      if (d.dm.b[_i8].fields[j].value) {\n        d.r[_i8].f[j].value = d.dm.b[_i8].fields[j].value;\n      } else {\n        d.r[_i8].f[j].value = null;\n        d.r[_i8].f[j].origval = null;\n      }\n    }\n\n    setOrder(_i8);\n  }\n\n  d.ri = 0;\n  d.fi = d.r[d.ri].order[0];\n};\n\nvar addBaseRecord = function addBaseRecord(bInd, bRec) {\n  for (var _i9 = 0; _i9 < d.r.length; _i9++) {\n    if (d.r[_i9].bi == bInd) {\n      // use Array.splice() to replace the base record with one that's filled out\n      d.r.splice(_i9, 1, {\n        type: \"base\",\n        bi: _i9,\n        \"new\": false,\n        order: [],\n        f: {}\n      });\n\n      for (var j in d.dm.b[_i9].fields) {\n        d.r[_i9].f[j] = {\n          sfname: d.dm.b[_i9].fields[j].sfname\n        };\n\n        if (bRec) {\n          d.r[_i9].f[j].value = bRec[d.dm.b[_i9].fields[j].sfname];\n          d.r[_i9].f[j].origval = bRec[d.dm.b[_i9].fields[j].sfname];\n        } else if (d.dm.b[_i9].fields[j].value) {\n          d.r[_i9].f[j].value = d.dm.b[_i9].fields[j].value;\n        } else {\n          d.r[_i9].f[j].value = null;\n          d.r[_i9].f[j].origval = null;\n        }\n      }\n\n      ;\n      setOrder(_i9);\n\n      for (var _j2 = 0; _j2 < d.r.length; _j2++) {\n        if (d.r[_j2].type === \"search\") {\n          d.ri = _j2;\n          d.fi = d.r[_j2].order[0];\n          return true;\n        }\n      }\n\n      if (d.search) {\n        sf.clearBaseSearch();\n        d.fi = d.r[_i9].order[0];\n        sf.loadAllRecords();\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar addRecord = function addRecord(rInd, rec) {\n  var i = d.dm.b.length; // Decide where in the r array we will insert the new record. This loop keeps counting up until\n  // a) we exceed the length of the array, b) we reach the next higher record type, or c) we get to\n  // a record in the array of the same type and with the same sf Id as the record to be inserted.\n\n  while (i < d.r.length) {\n    if (!rec) {\n      if (d.r[i].ri <= rInd) {\n        i += 1;\n      } else {\n        break;\n      }\n    } else if (d.r[i].ri <= rInd && !(d.r[i].ri === rInd && d.r[i].f.Id.value === rec.Id)) {\n      i++;\n    } else {\n      break;\n    }\n  }\n\n  if (i === d.r.length) {\n    d.r.push({\n      type: \"record\",\n      ri: rInd,\n      order: [],\n      f: {}\n    });\n  } else if (d.r[i].ri === rInd && d.r[i].f.Id.value === rec.Id) {\n    d.r.splice(i, 1, {\n      // replace the record, if it has the same id\n      type: \"record\",\n      ri: rInd,\n      order: [],\n      f: {}\n    });\n  } else {\n    d.r.splice(i, 0, {\n      // otherwise, insert without deleting anything\n      type: \"record\",\n      ri: rInd,\n      order: [],\n      f: {}\n    });\n  }\n\n  if (!rec) {\n    d.r[i][\"new\"] = true;\n  } else {\n    d.r[i][\"new\"] = false;\n  }\n\n  for (var j in d.dm.r[rInd].fields) {\n    d.r[i].f[j] = {};\n    d.r[i].f[j].sfname = d.dm.r[rInd].fields[j].sfname;\n\n    if (d.r[i][\"new\"]) {\n      if (d.dm.r[rInd].fields[j].inherits) {\n        d.r[i].f[j].value = d.r[d.dm.r[rInd].fields[j].inherits.base].f[d.dm.r[rInd].fields[j].inherits.field].value;\n      } else if (d.dm.r[rInd].fields[j].autofill) {\n        d.r[i].f[j].value = d.r[d.dm.r[rInd].fields[j].autofill.base].f[d.dm.r[rInd].fields[j].autofill.field].value;\n      } else if (d.dm.r[rInd].fields[j].value) {\n        d.r[i].f[j].value = d.dm.r[rInd].fields[j].value;\n      } else if (d.dm.r[rInd].fields[j][\"default\"]) {\n        d.r[i].f[j].value = d.dm.r[rInd].fields[j][\"default\"];\n      } else {\n        d.r[i].f[j].value = null;\n      }\n    } else {\n      d.r[i].f[j].value = rec[d.dm.r[rInd].fields[j].sfname];\n      d.r[i].f[j].origval = rec[d.dm.r[rInd].fields[j].sfname];\n    }\n  }\n\n  setOrder(i);\n  return true;\n};\n\nvar updateIndexFields = function updateIndexFields(callback, rin) {\n  if (!callback || typeof callback !== 'function') return false;\n  rn.renderLoadingStart('Looking up index fields');\n  var ctr = 0;\n  var total = 0;\n\n  if (rin !== undefined && rin < d.r.length) {\n    var _ret = function () {\n      var map = rf.getBorR(rin);\n\n      for (var j in d.r[rin].f) {\n        if (map.fields[j].type === 'index' && d.r[rin].f[j].value) total += 1;\n      }\n\n      if (total === 0) {\n        rn.renderLoadingEnd();\n        callback();\n        return {\n          v: void 0\n        };\n      }\n\n      var _loop = function _loop(_j3) {\n        if (map.fields[_j3].type === 'index' && d.r[rin].f[_j3].value) {\n          var fieldsvar = {};\n\n          var _callback;\n\n          fieldsvar[map.fields[_j3].indexshow] = 1;\n          $.ajax({\n            type: \"POST\",\n            contentType: \"application/json\",\n            url: \"/api/find\",\n            dataType: \"json\",\n            async: true,\n            //json object to sent to the authentication url\n            data: JSON.stringify({\n              sobject: map.fields[_j3].indexto,\n              conditions: {\n                Id: d.r[i].f[_j3].value\n              },\n              fields: fieldsvar\n            }),\n            success: function success(data) {\n              ctr += 1;\n\n              if (data[0]) {\n                d.r[i].f[_j3].showval = data[0][map.fields[_j3].indexshow];\n              }\n\n              if (ctr === total) {\n                rn.renderLoadingEnd();\n\n                _callback();\n              }\n            }\n          });\n        }\n      };\n\n      for (var _j3 in d.r[rin].f) {\n        _loop(_j3);\n      }\n\n      return {\n        v: true\n      };\n    }();\n\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n\n  total = 0;\n  ctr = 0;\n\n  for (var _i10 in d.r) {\n    var map = mf.getBorR(_i10);\n\n    for (var j in d.r[_i10].f) {\n      if (map.fields[j].type == 'index' && d.r[_i10].f[j].value) total += 1;\n    }\n  }\n\n  if (total === 0) {\n    rn.renderLoadingEnd();\n    callback();\n    return;\n  }\n\n  var _loop2 = function _loop2(_i11) {\n    var map = mf.getBorR(_i11);\n\n    var _loop3 = function _loop3(_j4) {\n      if (map.fields[_j4].type == 'index' && d.r[_i11].f[_j4].value) {\n        var fieldsvar = {};\n        fieldsvar[map.fields[_j4].indexshow] = 1;\n        $.ajax({\n          type: \"POST\",\n          contentType: \"application/json\",\n          url: \"/api/find\",\n          dataType: \"json\",\n          async: true,\n          //json object to sent to the authentication url\n          data: JSON.stringify({\n            sobject: map.fields[_j4].indexto,\n            conditions: {\n              Id: d.r[_i11].f[_j4].value\n            },\n            fields: fieldsvar\n          }),\n          success: function success(data) {\n            ctr += 1;\n\n            if (data[0]) {\n              d.r[_i11].f[_j4].showval = data[0][map.fields[_j4].indexshow];\n            }\n\n            if (ctr === total) {\n              rn.renderLoadingEnd();\n              callback();\n            }\n          }\n        });\n      }\n    };\n\n    for (var _j4 in d.r[_i11].f) {\n      _loop3(_j4);\n    }\n  };\n\n  for (var _i11 in d.r) {\n    _loop2(_i11);\n  }\n};\n\nvar updateR = function updateR() {\n  fm = mf.getFm();\n\n  if (!d.r[d.ri].f[d.fi].origval || d.r[d.ri].f[d.fi].value != d.r[d.ri].f[d.fi].origval) {\n    if (d.r[d.ri].type === \"search\" && d.r[d.ri][\"new\"]) {\n      return sf.searchBase(d.ri);\n    }\n  }\n\n  return true;\n};\n\nmodule.exports.initR = initR;\nmodule.exports.orderR = orderR;\nmodule.exports.isNew = isNew;\nmodule.exports.isChanged = isChanged;\nmodule.exports.allUnchanged = allUnchanged;\nmodule.exports.basesUpToDate = basesUpToDate;\nmodule.exports.setValue = setValue;\nmodule.exports.validateSelection = validateSelection;\nmodule.exports.nextrAndAdd = nextrAndAdd;\nmodule.exports.nextrNoAdd = nextrNoAdd;\nmodule.exports.nextr = nextr;\nmodule.exports.prevrAndAdd = prevrAndAdd;\nmodule.exports.prevrNoAdd = prevrNoAdd;\nmodule.exports.prevr = prevr;\nmodule.exports.nextf = nextf;\nmodule.exports.prevf = prevf;\nmodule.exports.jumpTo = jumpTo;\nmodule.exports.setOrder = setOrder;\nmodule.exports.addSearchRecords = addSearchRecords;\nmodule.exports.addBaseRecord = addBaseRecord;\nmodule.exports.addRecord = addRecord;\nmodule.exports.updateIndexFields = updateIndexFields;\nmodule.exports.updateR = updateR;\n\n//# sourceURL=webpack:///./src/recarrayfunctions.js?");

/***/ }),

/***/ "./src/render.js":
/*!***********************!*\
  !*** ./src/render.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar mf = __webpack_require__(/*! ./mapfunctions.js */ \"./src/mapfunctions.js\");\n\nvar sf = __webpack_require__(/*! ./searchfunctions.js */ \"./src/searchfunctions.js\");\n\nvar rf = __webpack_require__(/*! ./recarrayfunctions.js */ \"./src/recarrayfunctions.js\");\n\nvar uf = __webpack_require__(/*! ./upsertfunctions.js */ \"./src/upsertfunctions.js\");\n\nvar ef = __webpack_require__(/*! ./eventfunctions.js */ \"./src/eventfunctions.js\");\n\nvar renderDoc = function renderDoc(site) {\n  $('.pdfwin').empty();\n\n  if (site === undefined) {\n    $(\".pdfwin\").append('<iframe id=\"pdfiframe\" height=\"100%\" width=\"100%\" src=\"/doc/view\"></iframe>');\n  } else {\n    $(\".pdfwin\").append('<iframe id=\"pdfiframe\" height=\"100%\" width=\"100%\" src=\"' + site + '\"></iframe>');\n  }\n\n  $('#pdfiframe').on('load', function () {\n    $(\"#pdfiframe\").contents().find(\"body\").off().mouseup(function (e) {\n      var doc = document.getElementById(\"pdfiframe\").contentDocument;\n      var selec = doc.getSelection();\n      var txt = selec.toString();\n\n      if (!txt) {\n        return;\n      }\n\n      if (mdownpos === []) mdownpos = [e.pageX, e.pageY];\n\n      if (!rf.validateSelection(txt)) {\n        renderSelectionErr(selec);\n        selec.collapseToStart();\n        $('.fldwin').attr(\"tabindex\", -1).focus();\n        return;\n      }\n\n      $(\".fldinput\").val(txt);\n      $(\".fldinput\").change();\n      selec.collapseToStart();\n      $('.fldwin').attr(\"tabindex\", -1).focus();\n      mdownpos = [];\n    });\n    $('#pdfiframe').contents().find('body').mousedown(function (e) {\n      mdownpos = [e.pageX, e.pageY];\n      $('#selecpopup').remove();\n    });\n  });\n};\n\nvar renderSelectionErr = function renderSelectionErr(selec) {\n  var fname = mf.getFm().appname;\n  var $mainwin = $('.mainwin');\n  var $iframe = $('.pdfwin');\n  $mainwin.append('<div id=\"selecpopup\" style=\"position:absolute;display:none;z-index:100;background-color:yellow;\"><b>Invalid selection for field: \"' + fname + '\"</b></div>');\n  var $popup = $('#selecpopup');\n  $('#selecpopup').offset({\n    top: $iframe.position().top + mdownpos[1] - 45,\n    left: $iframe.position().left + mdownpos[0] - 100\n  }).show();\n  setTimeout(function () {\n    $('#selecpopup').fadeOut('slow', function () {\n      $('#selecpopup').remove();\n    });\n  }, 2000);\n};\n\nvar renderError = function renderError(msg) {\n  $(\".error-body\").empty();\n  $(\".error-body\").append(msg);\n  $(\".error\").modal(\"show\");\n};\n\nvar renderAlert = function renderAlert(msg, callback) {\n  $(\".alert-body\").empty();\n  $(\".alert-body\").append(msg);\n  $(\".alert\").modal(\"show\");\n  $('.alert-execute').off().click(function () {\n    $('.alert').modal('hide');\n\n    if (callback) {\n      callback();\n    }\n  });\n};\n\nvar renderOpenUrl = function renderOpenUrl() {\n  $('.openurl-input').val('');\n  $('.openurlmodal').modal('show');\n  $('.openurl-open-btn').off().click(function () {\n    $('.openurlmodal').modal('hide');\n    renderDoc($('.openurl-input').val());\n  });\n};\n\nvar renderLoadingStart = function renderLoadingStart(msg) {\n  $('.ld-msg').empty();\n  $('.ld-msg').append(msg);\n  $('.loading').modal('show');\n  setTimeout(function () {\n    renderLoadingEnd();\n  }, 10000);\n};\n\nvar renderLoadingEnd = function renderLoadingEnd() {\n  setTimeout(function () {\n    $('.loading').modal('hide');\n  }, 200);\n  $('.ld-msg').empty();\n};\n\nvar renderBaseSearch = function renderBaseSearch() {\n  var map = mf.getBorR();\n  var riloc = d.ri;\n  var filoc = d.fi;\n  $(\".sfviewmenu\").empty();\n\n  if (d.r[d.ri].type == 'search') {\n    $(\".sfviewmenu\").append('<button type=\"button\" class=\"btn btn-primary newbase-button\">New</button');\n    $(\".newbase-button\").off().click(function () {\n      d.r[riloc].type = 'base';\n      rf.setOrder(riloc);\n      d.fi = d.r[riloc].order[0];\n      renderFldEntry();\n      renderSfView();\n    });\n    $(\".sfviewbody\").empty();\n    $(\".sfviewbody\").append(\"<h4>Find or Create \" + map.appname + \" (\" + map.sobject + \")</h4>\");\n\n    if (d.sdata.empty) {\n      return false;\n    }\n\n    var _loop = function _loop(i) {\n      $(\".sfviewbody\").append('<div class=\"search-result\" data-id=\"' + d.sdata.records[i][\"Id\"] + '\" id=\"sresult' + i + '\"></div>');\n\n      for (j in d.sdata.layout) {\n        $(\"#sresult\" + i).append(\"<div>\" + mf.parseLayout(d.sdata.layout[j], d.sdata.records[i]) + \"</div>\");\n      }\n\n      $(\"#sresult\" + i).off().click(function () {\n        $.event.trigger({\n          type: \"searchSelect\",\n          Id: d.sdata.records[i][\"Id\"]\n        });\n      });\n    };\n\n    for (var i = 0; i < d.sdata.records.length; i++) {\n      var j;\n\n      _loop(i);\n    }\n  } else {\n    $(\".sfviewmenu\").append('<button type=\"button\" class=\"btn btn-primary createbase-button\">Add to Salesforce</button');\n    $(\".createbase-button\").off().click(function () {\n      renderLoadingStart();\n      uf.updateRecord(riloc, function (data, rin) {\n        renderLoadingEnd();\n\n        if (data[0]) {\n          if (data[0].id) {\n            rf.setValue(rin, 'Id', data[0].id);\n            d.r[rin][\"new\"] = false;\n            sf.loadAllRecords();\n          }\n        }\n      });\n    });\n    $(\".sfviewbody\").empty();\n    $(\".sfviewbody\").append(\"<h4>Add \" + map.appname + \" (\" + map.sobject + \") to Salesforce</h4>\");\n  }\n};\n\nvar renderSfView = function renderSfView() {\n  /*if (init) {\n    $(\".sfviewmenu\").empty();\n    $(\".sfviewbody\").empty();\n    return;\n  }*/\n  if (d.search) {\n    return renderBaseSearch();\n  }\n\n  if (d.ri >= d.r.length) d.ri = d.r.length - 1;\n  if (d.ri < 0) d.ri = 0;\n  $(\".sfviewmenu\").empty();\n  $(\".sfviewmenu\").append('<button type=\"button\" class=\"btn btn-primary saveall-button\" style=\"margin-right:5px;\">Save All</button');\n  $('.saveall-button').off().click(function () {\n    uf.updateAll();\n  });\n  $(\".sfviewmenu\").append('<button type=\"button\" class=\"btn btn-primary refresh-button\">Refresh</button');\n  $('.refresh-button').off().click(function () {\n    sf.loadAllRecords();\n  });\n  $(\".sfviewbody\").empty();\n\n  var _loop2 = function _loop2(i) {\n    $(\".sfviewbody\").append('<div class=\"sfview-header sfview-base-box\" id=\"sfview-hdr-b-' + i + '\"></div>');\n    $(\"#sfview-hdr-b-\" + i).append(\"<h4>\" + d.dm.b[i].appname + \"</h4>\");\n\n    for (j = 0; j < d.dm.b[i].settings.layout.length; j++) {\n      $(\"#sfview-hdr-b-\" + i).append('<div>' + mf.parseLayout(d.dm.b[i].settings.layout[j], mf.getFieldsForLayout(i)) + '</div>');\n    }\n\n    $(\"#sfview-hdr-b-\" + i).attr('style', 'cursor:pointer');\n    $(\"#sfview-hdr-b-\" + i).off().click(function () {\n      rf.jumpTo(i);\n      renderFldEntry();\n      renderSfView();\n    });\n\n    if (d.ri == i) {\n      $('#sfview-hdr-b-' + i).attr('style', 'border:2px solid red;');\n    }\n  };\n\n  for (var i = 0; i < d.dm.b.length; i++) {\n    var j;\n\n    _loop2(i);\n  }\n\n  for (var i = 0; i < d.dm.r.length; i++) {\n    $(\".sfviewbody\").append('<div class=\"sfview-header\" id=\"sfview-hdr-r-' + i + '\"></div>');\n    $(\"#sfview-hdr-r-\" + i).append(\"<h4>\" + d.dm.r[i].appname + \"</h4>\");\n  }\n\n  var _loop3 = function _loop3(_i) {\n    $(\"#sfview-hdr-r-\" + d.r[_i].ri).append('<div class=\"sfview-record\" id=\"sfview-rec-' + _i + '\"></div>');\n\n    for (var _j = 0; _j < d.dm.r[d.r[_i].ri].settings.layout.length; _j++) {\n      $(\"#sfview-rec-\" + _i).append('<div>' + mf.parseLayout(d.dm.r[d.r[_i].ri].settings.layout[_j], mf.getFieldsForLayout(_i)) + '</div>');\n    }\n\n    $('#sfview-rec-' + _i).off().click(function () {\n      rf.jumpTo(_i);\n      renderFldEntry();\n      renderSfView();\n    });\n\n    if (d.ri == _i) {\n      $('#sfview-rec-' + _i).attr('style', 'border: 2px solid red;');\n    }\n  };\n\n  for (var _i = d.dm.b.length; _i < d.r.length; _i++) {\n    _loop3(_i);\n  }\n\n  var currentScrollTop = $('.sfviewbody').scrollTop();\n\n  if (d.ri < d.dm.b.length) {\n    var selElement = $('#sfview-hdr-b-' + d.ri);\n  } else {\n    var selElement = $('#sfview-rec-' + d.ri);\n  }\n\n  var offsettop = selElement.offset().top - $('.sfviewbody').offset().top;\n  var offsetbottom = offsettop + selElement.height();\n\n  if (offsetbottom > $('.sfviewbody').innerHeight()) {\n    $('.sfviewbody').scrollTop(currentScrollTop + offsetbottom - $('.sfviewbody').innerHeight() + 5);\n  } else if (offsettop < 0) {\n    $('.sfviewbody').scrollTop(currentScrollTop + offsettop);\n  }\n};\n\nvar convertDate = function convertDate(strin) {\n  var date = new Date(strin);\n  var months = ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'June', 'July', 'Aug.', 'Sep.', 'Oct.', 'Nov.', 'Dec.'];\n  return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n};\n\nvar renderFldEntry = function renderFldEntry() {\n  /*if ( d.length == 0 ) {\n    $(\".fldwinleft\").empty();\n    $(\".fldwinright\").empty();\n    $(\".fldtitle\").empty();\n    $(\".fldentry\").empty();\n    $(\".fldinstr\").empty();\n    return;\n  }*/\n  if (d.ri >= d.r.length) d.ri = d.r.length - 1;\n  if (d.ri < 0) d.ri = 0;\n  $(\".fldwinleft\").empty();\n\n  if (d.ri != 0 || d.fi != d.r[0].order[0]) {\n    $(\".fldwinleft\").append('<a class=\"btn btn-primary\" href=\"#\" id=\"prevlink\"><</a>');\n    $(\"#prevlink\").off().click(function () {\n      rf.updateR();\n      rf.setOrder();\n      rf.prevf();\n      renderFldEntry();\n      renderSfView();\n    });\n  }\n\n  $(\".fldwinright\").empty();\n\n  if (d.ri < d.r.length - 1 || d.fi != d.r[d.r.length - 1].order[d.r[d.r.length - 1].order.length - 1]) {\n    $(\".fldwinright\").append('<a class=\"btn btn-primary\" href=\"#\" id=\"nextlink\">></a>');\n    $(\"#nextlink\").off().click(function () {\n      rf.updateR();\n      rf.setOrder();\n      rf.nextf();\n      renderFldEntry();\n      renderSfView();\n    });\n  }\n\n  var rec = d.r[d.ri];\n  var rmap = mf.getBorR();\n  $(\".fldtitle\").empty();\n  $(\".fldtitle\").append(\"<h4>\" + rmap.fields[d.fi].appname + \"</h4>\");\n  $(\".fldinstr\").empty();\n\n  if (rmap.fields[d.fi].instructions) {\n    $(\".fldinstr\").append(\"<p>\" + rmap.fields[d.fi].instructions + \"</p>\");\n  }\n\n  $(\".fldentry\").empty();\n\n  switch (rmap.fields[d.fi].type) {\n    case \"text\":\n      if (rmap.fields[d.fi].length > 260) {\n        var fldinput = '<textarea style=\"resize: none\" rows=\"5\" cols=\"45\" ';\n      } else {\n        var fldinput = '<input type=\"text\" size=\"45\" ';\n      }\n\n      fldinput += 'class=\"fldinput\" maxlength = \"' + rmap.fields[d.fi].length + '\" > ';\n      break;\n\n    case \"phone\":\n      var fldinput = '<input class=\"fldinput\" type=\"text\" size=\"45\" maxlength=\"40\">';\n      break;\n\n    case \"url\":\n      var fldinput = '<input class=\"fldinput\" type=\"text\" size=\"50\">';\n      break;\n\n    case \"email\":\n      var fldinput = '<input class=\"fldinput\" type=\"text\" size=\"45\" maxlength=\"' + rmap.fields[d.fi].length + '\">';\n      break;\n\n    case \"picklist\":\n      var fldinput = '<select class=\"fldinput\">';\n      fldinput += '<option value=\"\">None</option>';\n\n      for (var i = 0; i < rmap.fields[d.fi].values.length; i++) {\n        fldinput += \"<option>\" + rmap.fields[d.fi].values[i] + \"</option>\";\n      }\n\n      fldinput += \"</select>\";\n      break;\n\n    case \"date\":\n      var fldinput = '<input class=\"fldinput\" type=\"text\" maxlength=\"100\">';\n      break;\n\n    case \"index\":\n      var fldinput = '<input class=\"fldinput\" type=\"text\" size=\"45\" maxlength=\"255\">';\n      break;\n\n    case \"boolean\":\n      var fldinput = '<input class=\"fldinput\" type=\"checkbox\" >';\n      break;\n\n    default:\n      break;\n  }\n\n  $(\".fldentry\").append(fldinput);\n\n  if (d.r[d.ri].f[d.fi].value) {\n    if (rmap.fields[d.fi].type == 'index') {\n      if (d.r[d.ri].f[d.fi].showval) {\n        $('.fldinput').val(d.r[d.ri].f[d.fi].showval);\n      }\n    } else if (rmap.fields[d.fi].type == 'date') {\n      $('.fldinput').val(convertDate(d.r[d.ri].f[d.fi].value));\n    } else if (rmap.fields[d.fi].type == 'boolean') {\n      if (d.r[d.ri].f[d.fi].value) {\n        $('.fldinput').prop('checked', true);\n      } else {\n        $('.fldinput').prop('checked', false);\n      }\n    } else {\n      $(\".fldinput\").val(d.r[d.ri].f[d.fi].value);\n    }\n  }\n\n  var rin = d.ri;\n  var fin = d.fi;\n  var so = rmap.fields[fin].indexto;\n  $(\".fldinput\").off().change(function () {\n    if (rmap.fields[fin].type == \"index\") {\n      if ($('.fldinput').val() == '') {\n        d.r[rin].f[fin].showval = null;\n        d.r[rin].f[fin].value = null;\n        rf.updateR();\n        rf.setOrder();\n        rf.nextf();\n        renderFldEntry();\n        renderSfView();\n        return;\n      }\n\n      d.r[rin].f[fin].showval = $('.fldinput').val();\n      sf.searchIndexRecord(rin, fin);\n      return;\n    }\n\n    if (rmap.fields[fin].type == \"boolean\") {\n      d.r[rin].f[fin].value = $(\".fldinput\").prop('checked');\n      return;\n    }\n\n    if (rf.setValue(rin, fin, $(\".fldinput\").val())) {\n      rf.updateR();\n      rf.setOrder();\n      rf.nextf();\n      renderFldEntry();\n      renderSfView();\n    }\n  });\n};\n\nvar renderIndexSearch = function renderIndexSearch(rin, fin, records) {\n  var fm = mf.getFm(rin, fin);\n  $(\".insrch-title\").empty();\n  $(\".insrch-body\").empty();\n  $(\".insrch-title\").prepend('Searching for ' + fm.indexto);\n  $('.insrch').modal('show');\n\n  var _loop4 = function _loop4(i) {\n    $(\".insrch-body\").append('<div class=\"insresult\" id=\"insresult' + i + '\"></div>');\n\n    for (var j = 0; j < fm.searchlayout.length; j++) {\n      $(\"#insresult\" + i).append('<span>' + mf.parseLayout(fm.searchlayout[j], records[i]) + '</span>');\n    }\n\n    $('#insresult' + i).off().click(function () {\n      indexSearchSelected(rin, fin, records[i]);\n      $('.insrch').modal('hide');\n    });\n  };\n\n  for (var i = 0; i < records.length; i++) {\n    _loop4(i);\n  }\n\n  $('.insrch-create-btn').off().click(function () {\n    renderIndexCreate(rin, fin);\n  });\n};\n\nvar renderIndexCreate = function renderIndexCreate(rin, fin) {\n  var map = mf.getBorR(rin);\n  var fm = mf.getFm(rin, fin);\n  $(\".increate-title\").empty();\n  $('.increate-body').empty();\n  $(\".increate-title\").append(\"Create new \" + fm.appname + \" record\");\n  var recordObj = {};\n  recordObj.sobject = fm.indexto;\n  recordObj.record = {};\n\n  for (var i = 0; i < fm.createfields.length; i++) {\n    $('.increate-body').append('<div id=\"increate-fld-' + i + '\"></div>');\n    $('#increate-fld-' + i).append('<h5 id=\"increate-fldtitle-' + i + '\"></h5>');\n    $('#increate-fld-' + i).append('<input type=\"text\" size=\"45\" id=\"increate-fldinput-' + i + '\">');\n    $(\"#increate-fldtitle-\" + i).append(fm.createfields[i] + ':');\n\n    if (fm.createfields[i] == fm.indexshow) {\n      $(\"#increate-fldinput-\" + i).val($('.fldinput').val());\n    }\n  }\n\n  $('.increate-create-btn').off().click(function () {\n    var apiObj = {\n      sobject: fm.indexto,\n      records: [{}]\n    };\n\n    for (var j = 0; j < fm.createfields.length; j++) {\n      if ($('#increate-fldinput-' + j).val()) {\n        apiObj.records[0][fm.createfields[j]] = $('#increate-fldinput-' + j).val();\n      }\n    }\n\n    for (var k in fm.indexfields) {\n      if (fm.indexfields[k].value) {\n        apiObj.records[0][k] = fm.indexfields[k].value;\n      }\n    }\n\n    renderLoadingStart('Creating ' + fm.appname + ' record');\n    $.ajax({\n      type: \"POST\",\n      contentType: \"application/json\",\n      url: \"/api/create\",\n      dataType: \"json\",\n      async: true,\n      //json object to sent to the authentication url\n      data: JSON.stringify(apiObj),\n      success: function success(data) {\n        renderLoadingEnd();\n\n        if (data[0].err || !data[0].success) {\n          renderError('Could not create ' + fm.indexto + ': ' + data[0].err);\n          return false;\n        }\n\n        $('.increate').modal('hide');\n        rf.setValue(rin, fin, data[0].id);\n        d.r[rin].f[fin].showval = apiObj.records[0][fm.indexshow];\n        renderFldEntry();\n        renderSfView();\n      }\n    });\n  });\n  $('.increate').modal('show');\n};\n\nvar renderAll = function renderAll() {\n  renderSfView();\n  renderFldEntry();\n  renderDoc();\n};\n\nvar renderInstructions = function renderInstructions() {\n  $('.instructions-frame').show();\n  ef.unbindEvents();\n};\n\nvar renderInstructionsHide = function renderInstructionsHide() {\n  $('.instructions-frame').hide();\n  ef.bindEvents();\n};\n\nmodule.exports.renderDoc = renderDoc;\nmodule.exports.renderSelectionErr = renderSelectionErr;\nmodule.exports.renderError = renderError;\nmodule.exports.renderAlert = renderAlert;\nmodule.exports.renderOpenUrl = renderOpenUrl;\nmodule.exports.renderLoadingStart = renderLoadingStart;\nmodule.exports.renderLoadingEnd = renderLoadingEnd;\nmodule.exports.renderBaseSearch = renderBaseSearch;\nmodule.exports.renderSfView = renderSfView;\nmodule.exports.convertDate = convertDate;\nmodule.exports.renderFldEntry = renderFldEntry;\nmodule.exports.renderIndexSearch = renderIndexSearch;\nmodule.exports.renderIndexCreate = renderIndexCreate;\nmodule.exports.renderAll = renderAll;\nmodule.exports.renderInstructions = renderInstructions;\nmodule.exports.renderInstructionsHide = renderInstructionsHide;\n\n//# sourceURL=webpack:///./src/render.js?");

/***/ }),

/***/ "./src/searchfunctions.js":
/*!********************************!*\
  !*** ./src/searchfunctions.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar mf = __webpack_require__(/*! ./mapfunctions.js */ \"./src/mapfunctions.js\");\n\nvar rf = __webpack_require__(/*! ./recarrayfunctions.js */ \"./src/recarrayfunctions.js\");\n\nvar rn = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n\nvar searchBase = function searchBase(rin) {\n  if (d.r[rin].type != \"search\") {\n    return false;\n  }\n\n  var bm = mf.getBorR(rin);\n  var searchObj = {};\n  /*\n  body = {\n      sobject: \"\",\n      conditions: {\n          SfField1: { $like: \"%field1val%\" },\n          SfField2: { $like: \"%field2val%\" },\n          SfField3: \"field3val\" //picklist\n      },\n      fields: {\n          SfField4: 1,\n  \n      }\n  }*/\n\n  searchObj.sobject = bm.sobject;\n  searchObj.conditions = {};\n  searchObj.fields = {};\n\n  for (var i in bm.fields) {\n    searchObj.fields[bm.fields[i].sfname] = 1;\n  }\n\n  for (var j = 0; j < bm.settings.searchorder.length; j++) {\n    var _i = bm.settings.searchorder[j].field;\n\n    if (d.r[rin].f[_i].value) {\n      if (bm.fields[_i].type == \"text\") {\n        searchObj.conditions[bm.fields[_i].sfname] = {\n          $like: \"%\" + d.r[rin].f[_i].value.replace(/\\s+/g, \"%\") + \"%\"\n        };\n      } else {\n        searchObj.conditions[bm.fields[_i].sfname] = d.r[rin].f[_i].value;\n      }\n    }\n  }\n\n  rn.renderLoadingStart(\"Searching for \" + bm.appname);\n  $.ajax({\n    type: \"POST\",\n    contentType: \"application/json\",\n    url: \"/api/find\",\n    dataType: \"json\",\n    async: true,\n    //json object to sent to the authentication url\n    data: JSON.stringify(searchObj),\n    success: function success(data) {\n      d.search = true;\n      d.sdata = {\n        type: \"base\",\n        layout: bm.settings.searchlayout,\n        sobject: searchObj.sobject,\n        i: d.r[rin].bi,\n        records: mf.convRecSA(\"base\", d.r[rin].bi, data)\n      };\n      $(document).on(\"searchSelect\", function (e) {\n        if (!e) {\n          return false;\n        }\n\n        if (e.Id) {\n          baseSearchSelected(e.Id);\n        } else {\n          return;\n        }\n      });\n      rn.renderLoadingEnd();\n      rn.renderSfView();\n    }\n  });\n};\n\nvar clearBaseSearch = function clearBaseSearch() {\n  d.search = false;\n  d.sdata = {\n    empty: true\n  };\n  rn.renderSfView();\n};\n\nvar searchIndexRecord = function searchIndexRecord(rin, fin) {\n  var map = mf.getBorR(rin);\n  var fm = map.fields[fin];\n\n  if (fm.type != 'index') {\n    return false;\n  }\n\n  var searchObj = {\n    sobject: fm.indexto,\n    conditions: {},\n    fields: {\n      Id: 1\n    }\n  };\n  searchObj.conditions[fm.indexshow] = {\n    $like: \"%\" + d.r[rin].f[fin].showval.replace(/\\s\\s+/g, \"%\") + \"%\"\n  };\n\n  for (var i in fm.indexfields) {\n    searchObj.fields[i] = 1;\n  }\n\n  rn.renderLoadingStart(\"Searching for \" + map.fields[fin].indexto);\n  $.ajax({\n    type: \"POST\",\n    contentType: \"application/json\",\n    url: \"/api/find\",\n    dataType: \"json\",\n    async: true,\n    //json object to sent to the authentication url\n    data: JSON.stringify(searchObj),\n    success: function success(data) {\n      rn.renderLoadingEnd();\n      return rn.renderIndexSearch(rin, fin, data);\n    }\n  });\n};\n\nvar loadAllRecords = function loadAllRecords(callback) {\n  rn.renderLoadingStart(\"Loading all records\");\n  var loaded = 0;\n\n  if (d.r.length > d.dm.b.length) {\n    var len = d.r.length;\n\n    for (var i = d.dm.b.length; i < len; i++) {\n      d.r.pop();\n    }\n  }\n\n  var _loop = function _loop(_i2) {\n    if (!d.r[_i2].f.Id.value) return \"continue\";\n    var searchObj = {\n      sobject: d.dm.b[_i2].sobject,\n      conditions: {},\n      fields: {}\n    };\n    searchObj.conditions.Id = d.r[_i2].f.Id.value;\n\n    for (var j in d.dm.b[_i2].fields) {\n      searchObj.fields[d.dm.b[_i2].fields[j].sfname] = 1;\n\n      if (d.dm.b[_i2].fields[j].value) {\n        searchObj.conditions[d.dm.b[_i2].fields[j].sfname] = d.dm.b[_i2].fields[j].value;\n      }\n    }\n\n    $.ajax({\n      type: \"POST\",\n      contentType: \"application/json\",\n      url: \"/api/find\",\n      dataType: \"json\",\n      async: true,\n      //json object to sent to the authentication url\n      data: JSON.stringify(searchObj),\n      success: function success(data) {\n        loaded += 1;\n\n        if (data) {\n          for (var l in data) {\n            rf.addBaseRecord(_i2, data[l]);\n          }\n        }\n\n        if (loaded === d.dm.b.length + d.dm.r.length) {\n          rf.orderR();\n          rf.updateIndexFields(function () {\n            rn.renderFldEntry();\n            rn.renderSfView();\n            if (callback && typeof callback === 'function') callback();\n          });\n        }\n      }\n    });\n  };\n\n  for (var _i2 = 0; _i2 < d.dm.b.length; _i2++) {\n    var _ret = _loop(_i2);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  var rlen = d.dm.r.length;\n\n  var _loop2 = function _loop2(_i3) {\n    var searchObj = {\n      sobject: d.dm.r[_i3].sobject,\n      conditions: {},\n      fields: {}\n    };\n\n    for (var j in d.dm.r[_i3].fields) {\n      searchObj.fields[d.dm.r[_i3].fields[j].sfname] = 1;\n\n      if (d.dm.r[_i3].fields[j].value) {\n        searchObj.conditions[d.dm.r[_i3].fields[j].sfname] = d.dm.r[_i3].fields[j].value;\n      } else if (d.dm.r[_i3].fields[j].inherits) {\n        for (var k in d.r) {\n          if (d.r[k].bi == d.dm.r[_i3].fields[j].inherits.base) {\n            searchObj.conditions[d.dm.r[_i3].fields[j].sfname] = d.r[k].f[d.dm.r[_i3].fields[j].inherits.field].value;\n          }\n        }\n      }\n    }\n\n    $.ajax({\n      type: \"POST\",\n      contentType: \"application/json\",\n      url: \"/api/find\",\n      dataType: \"json\",\n      async: true,\n      //json object to sent to the authentication url\n      data: JSON.stringify(searchObj),\n      success: function success(data) {\n        loaded += 1;\n\n        if (data) {\n          for (var l in data) {\n            rf.addRecord(_i3, data[l]);\n          }\n        }\n\n        if (loaded === d.dm.b.length + d.dm.r.length) {\n          rf.orderR();\n          rf.updateIndexFields(function () {\n            rn.renderFldEntry();\n            rn.renderSfView();\n            if (callback && typeof callback === 'function') callback();\n          });\n        }\n\n        return true;\n      }\n    });\n  };\n\n  for (var _i3 = 0; _i3 < rlen; _i3++) {\n    _loop2(_i3);\n  }\n};\n\nvar indexSearchSelected = function indexSearchSelected(rin, fin, record) {\n  if (!record.Id) {\n    return false;\n  }\n\n  rf.setValue(rin, fin, record.Id);\n  var fm = mf.getFm(rin, fin);\n\n  if (!record[fm.indexshow]) {\n    return false;\n  }\n\n  d.r[rin].f[fin].showval = record[fm.indexshow];\n  rf.nextf();\n  rn.renderFldEntry();\n  return true;\n};\n\nvar baseSearchSelected = function baseSearchSelected(id) {\n  var bRec = {};\n\n  for (var i in d.sdata.records) {\n    if (d.sdata.records[i].Id === id) {\n      bRec = d.sdata.records[i];\n    }\n  }\n\n  if (!bRec.Id) {\n    return false;\n  }\n\n  rf.addBaseRecord(d.sdata.i, bRec);\n  return;\n};\n\nvar recordSearchSelected = function recordSearchSelected(id) {\n  var rec = {};\n\n  for (var i in d.sdata.records) {\n    if (d.sdata.records[i].Id === id) {\n      rec = d.sdata.records[i];\n    }\n  }\n\n  if (!rec.Id) {\n    return false;\n  }\n\n  rf.addRecord(d.sdata.i, record);\n  rn.renderSfView();\n  rn.renderFldEntry();\n  return;\n};\n\nmodule.exports.searchBase = searchBase;\nmodule.exports.clearBaseSearch = clearBaseSearch;\nmodule.exports.searchIndexRecord = searchIndexRecord;\nmodule.exports.loadAllRecords = loadAllRecords;\nmodule.exports.indexSearchSelected = indexSearchSelected;\nmodule.exports.baseSearchSelected = baseSearchSelected;\nmodule.exports.recordSearchSelected = recordSearchSelected;\n\n//# sourceURL=webpack:///./src/searchfunctions.js?");

/***/ }),

/***/ "./src/upsertfunctions.js":
/*!********************************!*\
  !*** ./src/upsertfunctions.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var d = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n\nvar mf = __webpack_require__(/*! ./mapfunctions.js */ \"./src/mapfunctions.js\");\n\nvar rf = __webpack_require__(/*! ./recarrayfunctions.js */ \"./src/recarrayfunctions.js\");\n\nvar rn = __webpack_require__(/*! ./render.js */ \"./src/render.js\");\n\nvar sf = __webpack_require__(/*! ./searchfunctions.js */ \"./src/searchfunctions.js\");\n\nvar updateRecord = function updateRecord(rin, callback) {\n  if (!rf.isChanged(rin)) {\n    return false;\n  }\n\n  var map = mf.getBorR(rin);\n  var rec = d.r[rin];\n\n  if (rec[\"new\"] && !rec.f.Id.value) {\n    var apiObj = {\n      sobject: map.sobject,\n      records: [{}]\n    };\n\n    for (var i in rec.f) {\n      if (rec.f[i].value && rec.f[i].sfname != \"Id\" && !map.fields[i].noupdate) {\n        apiObj.records[0][map.fields[i].sfname] = rec.f[i].value;\n      }\n    }\n\n    $.ajax({\n      type: \"POST\",\n      contentType: \"application/json\",\n      url: \"/api/create\",\n      dataType: \"json\",\n      async: true,\n      //json object to sent to the authentication url\n      data: JSON.stringify(apiObj),\n      success: function success(data) {\n        if (data.success === false || data.err) {\n          return;\n        }\n\n        if (callback) callback(data, rin);\n      }\n    });\n  } else if (!rec[\"new\"]) {\n    var _apiObj = {\n      sobject: map.sobject,\n      records: [{}]\n    };\n    _apiObj.records[0].Id = rec.f.Id.value;\n\n    for (var _i in rec.f) {\n      if (rec.f[_i].value != rec.f[_i].origval && !map.fields[_i].noupdate) {\n        _apiObj.records[0][map.fields[_i].sfname] = rec.f[_i].value;\n      }\n    }\n\n    $.ajax({\n      type: \"POST\",\n      contentType: \"application/json\",\n      url: \"/api/update\",\n      dataType: \"json\",\n      async: true,\n      //json object to sent to the authentication url\n      data: JSON.stringify(_apiObj),\n      success: function success(data) {\n        if (data.success === false || data.err) {\n          return;\n        }\n\n        if (callback) callback(data);\n      }\n    });\n  } else {\n    rn.renderErr('Record is labelled new but has salesforce Id');\n    return false;\n  }\n\n  return true;\n};\n\nvar updateAll = function updateAll() {\n  if (rf.allUnchanged()) {\n    rn.renderError('Nothing to update!');\n    return false;\n  }\n\n  var ctr = 0;\n  var total = 0;\n  rn.renderLoadingStart();\n\n  for (var i = 0; i < d.r.length; i++) {\n    if (!rf.isChanged(i)) {\n      continue;\n    } else {\n      total += 1;\n    }\n  }\n\n  for (var _i2 = 0; _i2 < d.r.length; _i2++) {\n    updateRecord(_i2, function () {\n      ctr += 1;\n\n      if (ctr === total) {\n        rn.renderLoadingEnd();\n        sf.loadAllRecords();\n      }\n    });\n  }\n\n  return true;\n};\n\nmodule.exports.updateRecord = updateRecord;\nmodule.exports.updateAll = updateAll;\n\n//# sourceURL=webpack:///./src/upsertfunctions.js?");

/***/ })

/******/ });